1. Switch to the Database
test> use campusdb

2. Create Collection and Insert Documents
campusdb> db.enrollments.insertMany([
... {
...     name: "Ananya Verma",
...     studentId: 101,
...     courses: ["Python", "Java"],
...     address: { city: "Delhi", state: "Delhi" },
...     feesPaid: true },
... {
...     name: "Rohan Mehta",
...     studentId: 102,
...     courses: ["Python", "AI"],
...     address: { city: "Bangalore", state: "Karnataka" },
...     feesPaid: false },
... {
...     name: "Sneha Kapoor",
...     studentId: 103,
...     courses: [],
...     address: { city: "Hyderabad", state: "Telangana" },
...     feesPaid: true },
... {
...     name: "Imran Shaikh",
...     studentId: 104,
...     courses: ["Data Science", "Java"],
...     address: { city: "Delhi", state: "Delhi" },
...     feesPaid: false }
... ])

3. Display All Student Records
campusdb> db.enrollments.find()

4. Find All Students Enrolled in "Python"
campusdb> db.enrollments.find({ courses: "Python" })

5. Find Students from Delhi Who Have Not Paid Fees
campusdb> db.enrollments.find({
...     "address.city": "Delhi",
...     feesPaid: false
... })

6. Add "AI Fundamentals" to a Specific Student's Courses
campusdb> db.enrollments.updateOne(
...     { studentId: 102 },
...     { $push: { courses: "AI Fundamentals" } }
... )

7. Update the City of a Specific Student to "Mumbai"
campusdb> db.enrollments.updateOne(
...     { studentId: 101 },
...     { $set: { "address.city": "Mumbai" } }
... )

8. Set feesPaid to true for All Students from "Delhi"
campusdb> db.enrollments.updateMany(
...     { "address.city": "Delhi" },
...     { $set: { feesPaid: true } }
... )

9. Remove "Java" Course from Any Student Who Has It
campusdb> db.enrollments.updateMany(
...     { courses: "Java" },
...     { $pull: { courses: "Java" } }
... )

10. Delete All Students Who Have No Courses Enrolled
campusdb> db.enrollments.deleteMany({ courses: { $size: 0 } })
